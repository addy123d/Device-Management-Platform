<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Project</title>
</head>

<body>
    <!-- <form action="/projectDetails" method="POST"> -->
    <input type="text" name="title" id="title" placeholder="Project Title" autocomplete="off">
    <input type="text" name="ip" id="ip" placeholder="Enter Ip" autocomplete="off">
    <input type="number" name="pinNumber" id="number" placeholder="Pins for device configuration" autocomplete="off">
    <textarea name="projDescription" id="description" placeholder="Project Description"></textarea>
    <button id="button">Generate</button>
    <!-- </form> -->

    <textarea id="code">

    </textarea>

    <!-- Response -->
    <div class="response" style="display: none;">
        <h2>Project Registered !</h2>
    </div>
</body>
<script>
    const title = document.querySelector("#title");
    const ip = document.querySelector("#ip");
    const number = document.querySelector("#number");
    const description = document.querySelector("#description");
    const button = document.querySelector("#button");
    const generatedCode = document.querySelector("#code");
    const response = document.querySelector(".response");

    //Click button
    button.addEventListener("click", function (event) {
        event.preventDefault();

        //Collect Values
        console.log("Title :", title.value);
        console.log("Ip :", ip.value);
        console.log("Number :", number.value);
        console.log("Description :", description.value);

        //LowerCasing
        let titleValue = title.value;
        titleValue = titleValue.toLowerCase();


        if (titleValue.includes("motor")) {
            code.value = `const { Board, Servo } = require("johnny-five");
                            const board = new Board();

                            board.on("ready", () => {
                            //Pin declarations
                            const servo = new Servo(${number.value});


                            const express = require("express");
                            const fetch = require("node-fetch");
                            const host = "${ip.value}";
                            const port = 3000;


                            var app = express();

                            const readings = [];

                            app.get("/",function(request,response){
                            response.send("<a href = "/on" > Start Device</a>");
                            });

                            app.get("/on",function(request,response){

                            //Request platform server
                            fetch("http://127.0.0.1:5000/deviceping/<api_key>&<email>&${title.value.replace(" ", "")}")
                            .then(response=>response.json())
                            .then((result)=>{
                            console.log(result);
                            //Blink
                            if(result.error === 'You are not allowed !' || result.error === "Max calls exceeded !"){
                            return response.send(result.error);
                            };

                            //Alright
                            servo.sweep(); 
                            return response.json({"message" : "Data sending ...."});
                            })
                            .catch(function(err){
                                console.log(err);
                                });


                            });

                            app.listen(port,host,function(){
                            console.log("server is running ......");
                            })


                            });`;
        }

        if (titleValue.includes("led") | titleValue.includes("blink")) {
            code.value = `const { Board, Led } = require("johnny-five");
                            const board = new Board();

                            board.on("ready", function() {
                            //Pin configuration
                            var led = new Led(${number.value});

                            // Server Configuration
                            const express = require("express");
                            const fetch = require("node-fetch");
                            const host = "${ip.value}";
                            const port = 3000;

                            const app = express();

                            app.get("/",function(request,response){
                                response.send("<a href = "/on"> Led On</a> 
                                                <a href = "/off" > Led Off</a>");
                            })

                            app.get("/on",function(request,response){
                           
                                //Request platform server
                                fetch("http://127.0.0.1:5000/deviceping/<api_key>&<email>$${title.value.replace(" ", "")}")
                                .then(response=>response.json())
                                .then((result)=>{
                                    console.log(result);
                                    //Blink
                                    if(result.error === 'You are not allowed !' || result.error === "Max calls exceeded !"){
                                        led.stop().off();
                                        response.send(result.error);
                                    }else{
                                        led.blink(1000);
                                        return response.send("Connected with platform server !");
                                    }
                                })
                                .catch(err=>console.log(err));
                                });
                             
                              app.get("/off",function(request,response){
                           
                                //Request platform server
                                fetch("http://127.0.0.1:5000/deviceping/<api_key>&<email>${title.value.replace(" ", "")}")
                                .then(response=>response.json())
                                .then((result)=>{
                                    console.log(result);
                                    //Blink
                                    if(result.error === 'You are not allowed !' || result.error === "Max calls exceeded !"){
                                        led.stop().off();
                                        response.send(result.error);
                                    }else{
                                        led.stop().off();
                                        return response.send("Connected with platform server!");
                                    }
                                })
                                .catch(err=>console.log(err));
                                });

                            app.listen(port,host,function(){
                                console.log("Server is running...");
                            })


                            });`;
        }

        if (titleValue.includes("sensor") || titleValue.includes("ultrasonic sensor") || titleValue.includes("ultrasonic")) {
            code.value = `const { Board, Proximity, Led } = require("johnny-five");
                            const board = new Board();

                            board.on("ready", () => {
                            //Pin declarations
                            const proximity = new Proximity({
                            controller: "HCSR04",
                            pin: ${number.value}
                            });

                            const led = new Led(13);

                            const express = require("express");
                            const fetch = require("node-fetch");
                            const host = "${ip.value}";
                            const port = 3000;


                            var app = express();

                            const readings = [];

                            app.get("/",function(request,response){
                            response.send("<a href = "/on" > Start Device</a >
                                            <a href="/checkdata">Check data</a>");
                            });

                            app.get("/on",function(request,response){

                                //Request platform server
                                fetch("http://127.0.0.1:5000/deviceping/<api_key>&<email>&${title.value.replace(" ", "")}")
                                .then(response=>response.json())
                                .then((result)=>{
                                console.log(result);
                                //Blink
                                if(result.error === 'You are not allowed !' || result.error === "Max calls exceeded !"){
                                    return response.send(result.error);
                                };

                                //Alright
                                proximity.on("change", () => {
                                    const {centimeters} = proximity;
                                    console.log("  cm  : ", centimeters);

                                    if(centimeters < 5){
                                        led.on();

                                        const data = {
                                            "distance" :"<centimeters> cms",
                                            "reading" : centimeters,
                                            "status" : "LED on!",
                                            "time" : new Date().toString()
                                        };

                                    readings.push(data);

                                    //Post data using fetch

                                    const options = {
                                    method : 'post',
                                    body : JSON.stringify(readings[readings.length-1]),
                                    headers : {'Content-Type':'application/json'}
                                    };

                                    fetch('http://127.0.0.1:5000/device/data/<api_key>&${title.value.replace(" ", "")}',options)
                                    .then(res=>res.json())
                                    .then((json)=>{
                                            console.log("Message from server :",json);
                                    })
                                    .catch(function(err){
                                            console.log(err);
                                    });
                                    }else{
                                            led.off();
                                    };

                                });

                                    return response.json({"message" : "Data sending ...."});
                                }).
                                catch(function(err){
                                    console.log(err);
                                });


                                });

                                app.listen(port,host,function(){
                                    console.log("server is running ......");
                                })


                                });`;
        }

        const options = {
            method: "POST",
            body: JSON.stringify({
                title: title.value,
                ip: ip.value,
                pinNumber: number.value,
                projDescription: description.value
            }),
            headers: new Headers({ 'Content-Type': 'application/json' })
        };

        fetch("/projectDetails", options)
            .then(response => response.json())
            .then(function (data) {
                console.log("Data sent successfully !");
                if (data) {
                    response.style.display = "block";
                }
            })
            .catch(function (err) {
                console.log(err);
                return err;
            });

        //Reset all values
        title.value = "";
        ip.value = "";
        number.value = "";
        description.value = "";

    })
</script>

</html>



<!-- const { Board, Proximity, Led } = require("johnny-five");
const board = new Board();

board.on("ready", () => {
//Pin declarations
const proximity = new Proximity({
controller: "HCSR04",
pin: 4
});

const led = new Led(13);

const express = require("express");
const fetch = require("node-fetch");
const host = '127.0.0.1';
const port = 3000;


var app = express();

const readings = [];

app.get("/",function(request,response){
response.send(`<a href="/on">Start Device</a>
<a href="/checkdata">Check data</a>`);
});

app.get("/on",function(request,response){

//Request platform server
fetch("http://127.0.0.1:5000/deviceping/52f335cc98fc6&ac@gmail.com&LedBlink")
.then(response=>response.json())
.then((result)=>{
console.log(result);
//Blink
if(result.error === 'You are not allowed !' || result.error === "Max calls exceeded !"){
return response.send(result.error);
};

//Alright
proximity.on("change", () => {
const {centimeters} = proximity;
console.log(" cm : ", centimeters);

if(centimeters < 5){ led.on(); const data={ "distance" :`${centimeters} cms`, "reading" : centimeters, "status" : `LED
    on !`, "time" : new Date().toString() }; readings.push(data); //Post data using fetch const options={ method
    : 'post' , body : JSON.stringify(readings[readings.length-1]), headers : {'Content-Type':'application/json'} };
    fetch('http://127.0.0.1:5000/device/data/52f335cc98fc6&LedBlink',options) .then(res=>res.json())
    .then((json)=>{
    console.log("Message from server :",json);
    })
    .catch(function(err){
    console.log(err);
    });
    }else{
    led.off();
    }

    });

    return response.json({"message" : "Data sending ...."});
    }).
    catch(function(err){
    console.log(err);
    });


    });

    app.listen(port,host,function(){
    console.log("server is running ......");
    })


    }); -->